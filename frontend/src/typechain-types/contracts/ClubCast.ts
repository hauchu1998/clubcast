/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type {
  FunctionFragment,
  Result,
  EventFragment,
} from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
  PromiseOrValue,
} from "../common";

export type ClubStruct = {
  clubId: PromiseOrValue<string>;
  owner: PromiseOrValue<string>;
  governanceAddress: PromiseOrValue<string>;
  erc721Address: PromiseOrValue<string>;
  maxMember: PromiseOrValue<BigNumberish>;
};

export type ClubStructOutput = [string, string, string, string, BigNumber] & {
  clubId: string;
  owner: string;
  governanceAddress: string;
  erc721Address: string;
  maxMember: BigNumber;
};

export declare namespace ClubCast {
  export type PublicationStruct = {
    videoId: PromiseOrValue<BigNumberish>;
    publisher: PromiseOrValue<string>;
    md5Hash: PromiseOrValue<string>;
  };

  export type PublicationStructOutput = [BigNumber, string, string] & {
    videoId: BigNumber;
    publisher: string;
    md5Hash: string;
  };
}

export interface ClubCastInterface extends utils.Interface {
  functions: {
    "clubs(string)": FunctionFragment;
    "createClub(string,address,address)": FunctionFragment;
    "getClubErc721(string)": FunctionFragment;
    "getClubGovernance(string)": FunctionFragment;
    "getClubInfo(string)": FunctionFragment;
    "getClubOwner(string)": FunctionFragment;
    "getPublicationCount(string)": FunctionFragment;
    "getUserClubIds(address)": FunctionFragment;
    "joinClub(string)": FunctionFragment;
    "listPublications(string,address)": FunctionFragment;
    "owner()": FunctionFragment;
    "publications(string,uint256)": FunctionFragment;
    "publishVideo(string,uint256,string)": FunctionFragment;
    "renounceOwnership()": FunctionFragment;
    "tipContentCreator(uint256,string)": FunctionFragment;
    "tippingToken()": FunctionFragment;
    "tips(string)": FunctionFragment;
    "transferOwnership(address)": FunctionFragment;
    "userClubIds(address,uint256)": FunctionFragment;
    "userClubTokenMappings(address,string)": FunctionFragment;
    "withdrawTips(string)": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | "clubs"
      | "createClub"
      | "getClubErc721"
      | "getClubGovernance"
      | "getClubInfo"
      | "getClubOwner"
      | "getPublicationCount"
      | "getUserClubIds"
      | "joinClub"
      | "listPublications"
      | "owner"
      | "publications"
      | "publishVideo"
      | "renounceOwnership"
      | "tipContentCreator"
      | "tippingToken"
      | "tips"
      | "transferOwnership"
      | "userClubIds"
      | "userClubTokenMappings"
      | "withdrawTips"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "clubs",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "createClub",
    values: [
      PromiseOrValue<string>,
      PromiseOrValue<string>,
      PromiseOrValue<string>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "getClubErc721",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "getClubGovernance",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "getClubInfo",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "getClubOwner",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "getPublicationCount",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "getUserClubIds",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "joinClub",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "listPublications",
    values: [PromiseOrValue<string>, PromiseOrValue<string>]
  ): string;
  encodeFunctionData(functionFragment: "owner", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "publications",
    values: [PromiseOrValue<string>, PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "publishVideo",
    values: [
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<string>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "renounceOwnership",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "tipContentCreator",
    values: [PromiseOrValue<BigNumberish>, PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "tippingToken",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "tips",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "transferOwnership",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "userClubIds",
    values: [PromiseOrValue<string>, PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "userClubTokenMappings",
    values: [PromiseOrValue<string>, PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "withdrawTips",
    values: [PromiseOrValue<string>]
  ): string;

  decodeFunctionResult(functionFragment: "clubs", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "createClub", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "getClubErc721",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getClubGovernance",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getClubInfo",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getClubOwner",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getPublicationCount",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getUserClubIds",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "joinClub", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "listPublications",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "owner", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "publications",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "publishVideo",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "renounceOwnership",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "tipContentCreator",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "tippingToken",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "tips", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "transferOwnership",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "userClubIds",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "userClubTokenMappings",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "withdrawTips",
    data: BytesLike
  ): Result;

  events: {
    "NewClub(string,address,address,address)": EventFragment;
    "NewPublication(uint256,string,address,string)": EventFragment;
    "OwnershipTransferred(address,address)": EventFragment;
    "Tipped(address,string,uint256)": EventFragment;
    "Withdrawn(address,string,uint256)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "NewClub"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "NewPublication"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "OwnershipTransferred"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "Tipped"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "Withdrawn"): EventFragment;
}

export interface NewClubEventObject {
  clubId: string;
  creator: string;
  erc721Address: string;
  governanceAddress: string;
}
export type NewClubEvent = TypedEvent<
  [string, string, string, string],
  NewClubEventObject
>;

export type NewClubEventFilter = TypedEventFilter<NewClubEvent>;

export interface NewPublicationEventObject {
  videoId: BigNumber;
  clubId: string;
  publisher: string;
  md5Hash: string;
}
export type NewPublicationEvent = TypedEvent<
  [BigNumber, string, string, string],
  NewPublicationEventObject
>;

export type NewPublicationEventFilter = TypedEventFilter<NewPublicationEvent>;

export interface OwnershipTransferredEventObject {
  previousOwner: string;
  newOwner: string;
}
export type OwnershipTransferredEvent = TypedEvent<
  [string, string],
  OwnershipTransferredEventObject
>;

export type OwnershipTransferredEventFilter =
  TypedEventFilter<OwnershipTransferredEvent>;

export interface TippedEventObject {
  tipper: string;
  clubId: string;
  amount: BigNumber;
}
export type TippedEvent = TypedEvent<
  [string, string, BigNumber],
  TippedEventObject
>;

export type TippedEventFilter = TypedEventFilter<TippedEvent>;

export interface WithdrawnEventObject {
  creator: string;
  clubId: string;
  amount: BigNumber;
}
export type WithdrawnEvent = TypedEvent<
  [string, string, BigNumber],
  WithdrawnEventObject
>;

export type WithdrawnEventFilter = TypedEventFilter<WithdrawnEvent>;

export interface ClubCast extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: ClubCastInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    clubs(
      arg0: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<
      [string, string, string, string, BigNumber] & {
        clubId: string;
        owner: string;
        governanceAddress: string;
        erc721Address: string;
        maxMember: BigNumber;
      }
    >;

    createClub(
      _clubId: PromiseOrValue<string>,
      _erc721Address: PromiseOrValue<string>,
      _governanceAddress: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    getClubErc721(
      _clubId: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<[string]>;

    getClubGovernance(
      _clubId: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<[string]>;

    getClubInfo(
      _clubId: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<[ClubStructOutput]>;

    getClubOwner(
      _clubId: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<[string]>;

    getPublicationCount(
      _clubId: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    getUserClubIds(
      _userAddress: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<[string[], BigNumber[]]>;

    joinClub(
      _clubId: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    listPublications(
      _clubId: PromiseOrValue<string>,
      _requester: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<[ClubCast.PublicationStructOutput[]]>;

    owner(overrides?: CallOverrides): Promise<[string]>;

    publications(
      arg0: PromiseOrValue<string>,
      arg1: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<
      [BigNumber, string, string] & {
        videoId: BigNumber;
        publisher: string;
        md5Hash: string;
      }
    >;

    publishVideo(
      _clubId: PromiseOrValue<string>,
      _videoId: PromiseOrValue<BigNumberish>,
      _md5Hash: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    renounceOwnership(
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    tipContentCreator(
      _amount: PromiseOrValue<BigNumberish>,
      _clubId: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    tippingToken(overrides?: CallOverrides): Promise<[string]>;

    tips(
      arg0: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    transferOwnership(
      newOwner: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    userClubIds(
      arg0: PromiseOrValue<string>,
      arg1: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[string]>;

    userClubTokenMappings(
      arg0: PromiseOrValue<string>,
      arg1: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    withdrawTips(
      _clubId: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;
  };

  clubs(
    arg0: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<
    [string, string, string, string, BigNumber] & {
      clubId: string;
      owner: string;
      governanceAddress: string;
      erc721Address: string;
      maxMember: BigNumber;
    }
  >;

  createClub(
    _clubId: PromiseOrValue<string>,
    _erc721Address: PromiseOrValue<string>,
    _governanceAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  getClubErc721(
    _clubId: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<string>;

  getClubGovernance(
    _clubId: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<string>;

  getClubInfo(
    _clubId: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<ClubStructOutput>;

  getClubOwner(
    _clubId: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<string>;

  getPublicationCount(
    _clubId: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getUserClubIds(
    _userAddress: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<[string[], BigNumber[]]>;

  joinClub(
    _clubId: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  listPublications(
    _clubId: PromiseOrValue<string>,
    _requester: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<ClubCast.PublicationStructOutput[]>;

  owner(overrides?: CallOverrides): Promise<string>;

  publications(
    arg0: PromiseOrValue<string>,
    arg1: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<
    [BigNumber, string, string] & {
      videoId: BigNumber;
      publisher: string;
      md5Hash: string;
    }
  >;

  publishVideo(
    _clubId: PromiseOrValue<string>,
    _videoId: PromiseOrValue<BigNumberish>,
    _md5Hash: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  renounceOwnership(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  tipContentCreator(
    _amount: PromiseOrValue<BigNumberish>,
    _clubId: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  tippingToken(overrides?: CallOverrides): Promise<string>;

  tips(
    arg0: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  transferOwnership(
    newOwner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  userClubIds(
    arg0: PromiseOrValue<string>,
    arg1: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<string>;

  userClubTokenMappings(
    arg0: PromiseOrValue<string>,
    arg1: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  withdrawTips(
    _clubId: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  callStatic: {
    clubs(
      arg0: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<
      [string, string, string, string, BigNumber] & {
        clubId: string;
        owner: string;
        governanceAddress: string;
        erc721Address: string;
        maxMember: BigNumber;
      }
    >;

    createClub(
      _clubId: PromiseOrValue<string>,
      _erc721Address: PromiseOrValue<string>,
      _governanceAddress: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<void>;

    getClubErc721(
      _clubId: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<string>;

    getClubGovernance(
      _clubId: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<string>;

    getClubInfo(
      _clubId: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<ClubStructOutput>;

    getClubOwner(
      _clubId: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<string>;

    getPublicationCount(
      _clubId: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getUserClubIds(
      _userAddress: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<[string[], BigNumber[]]>;

    joinClub(
      _clubId: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    listPublications(
      _clubId: PromiseOrValue<string>,
      _requester: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<ClubCast.PublicationStructOutput[]>;

    owner(overrides?: CallOverrides): Promise<string>;

    publications(
      arg0: PromiseOrValue<string>,
      arg1: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<
      [BigNumber, string, string] & {
        videoId: BigNumber;
        publisher: string;
        md5Hash: string;
      }
    >;

    publishVideo(
      _clubId: PromiseOrValue<string>,
      _videoId: PromiseOrValue<BigNumberish>,
      _md5Hash: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<void>;

    renounceOwnership(overrides?: CallOverrides): Promise<void>;

    tipContentCreator(
      _amount: PromiseOrValue<BigNumberish>,
      _clubId: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<void>;

    tippingToken(overrides?: CallOverrides): Promise<string>;

    tips(
      arg0: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    transferOwnership(
      newOwner: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<void>;

    userClubIds(
      arg0: PromiseOrValue<string>,
      arg1: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<string>;

    userClubTokenMappings(
      arg0: PromiseOrValue<string>,
      arg1: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    withdrawTips(
      _clubId: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {
    "NewClub(string,address,address,address)"(
      clubId?: PromiseOrValue<string> | null,
      creator?: PromiseOrValue<string> | null,
      erc721Address?: null,
      governanceAddress?: null
    ): NewClubEventFilter;
    NewClub(
      clubId?: PromiseOrValue<string> | null,
      creator?: PromiseOrValue<string> | null,
      erc721Address?: null,
      governanceAddress?: null
    ): NewClubEventFilter;

    "NewPublication(uint256,string,address,string)"(
      videoId?: PromiseOrValue<BigNumberish> | null,
      clubId?: PromiseOrValue<string> | null,
      publisher?: null,
      md5Hash?: null
    ): NewPublicationEventFilter;
    NewPublication(
      videoId?: PromiseOrValue<BigNumberish> | null,
      clubId?: PromiseOrValue<string> | null,
      publisher?: null,
      md5Hash?: null
    ): NewPublicationEventFilter;

    "OwnershipTransferred(address,address)"(
      previousOwner?: PromiseOrValue<string> | null,
      newOwner?: PromiseOrValue<string> | null
    ): OwnershipTransferredEventFilter;
    OwnershipTransferred(
      previousOwner?: PromiseOrValue<string> | null,
      newOwner?: PromiseOrValue<string> | null
    ): OwnershipTransferredEventFilter;

    "Tipped(address,string,uint256)"(
      tipper?: PromiseOrValue<string> | null,
      clubId?: PromiseOrValue<string> | null,
      amount?: null
    ): TippedEventFilter;
    Tipped(
      tipper?: PromiseOrValue<string> | null,
      clubId?: PromiseOrValue<string> | null,
      amount?: null
    ): TippedEventFilter;

    "Withdrawn(address,string,uint256)"(
      creator?: PromiseOrValue<string> | null,
      clubId?: PromiseOrValue<string> | null,
      amount?: null
    ): WithdrawnEventFilter;
    Withdrawn(
      creator?: PromiseOrValue<string> | null,
      clubId?: PromiseOrValue<string> | null,
      amount?: null
    ): WithdrawnEventFilter;
  };

  estimateGas: {
    clubs(
      arg0: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    createClub(
      _clubId: PromiseOrValue<string>,
      _erc721Address: PromiseOrValue<string>,
      _governanceAddress: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    getClubErc721(
      _clubId: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getClubGovernance(
      _clubId: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getClubInfo(
      _clubId: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getClubOwner(
      _clubId: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getPublicationCount(
      _clubId: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getUserClubIds(
      _userAddress: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    joinClub(
      _clubId: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    listPublications(
      _clubId: PromiseOrValue<string>,
      _requester: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    owner(overrides?: CallOverrides): Promise<BigNumber>;

    publications(
      arg0: PromiseOrValue<string>,
      arg1: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    publishVideo(
      _clubId: PromiseOrValue<string>,
      _videoId: PromiseOrValue<BigNumberish>,
      _md5Hash: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    renounceOwnership(
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    tipContentCreator(
      _amount: PromiseOrValue<BigNumberish>,
      _clubId: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    tippingToken(overrides?: CallOverrides): Promise<BigNumber>;

    tips(
      arg0: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    transferOwnership(
      newOwner: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    userClubIds(
      arg0: PromiseOrValue<string>,
      arg1: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    userClubTokenMappings(
      arg0: PromiseOrValue<string>,
      arg1: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    withdrawTips(
      _clubId: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    clubs(
      arg0: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    createClub(
      _clubId: PromiseOrValue<string>,
      _erc721Address: PromiseOrValue<string>,
      _governanceAddress: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    getClubErc721(
      _clubId: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getClubGovernance(
      _clubId: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getClubInfo(
      _clubId: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getClubOwner(
      _clubId: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getPublicationCount(
      _clubId: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getUserClubIds(
      _userAddress: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    joinClub(
      _clubId: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    listPublications(
      _clubId: PromiseOrValue<string>,
      _requester: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    owner(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    publications(
      arg0: PromiseOrValue<string>,
      arg1: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    publishVideo(
      _clubId: PromiseOrValue<string>,
      _videoId: PromiseOrValue<BigNumberish>,
      _md5Hash: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    renounceOwnership(
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    tipContentCreator(
      _amount: PromiseOrValue<BigNumberish>,
      _clubId: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    tippingToken(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    tips(
      arg0: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    transferOwnership(
      newOwner: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    userClubIds(
      arg0: PromiseOrValue<string>,
      arg1: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    userClubTokenMappings(
      arg0: PromiseOrValue<string>,
      arg1: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    withdrawTips(
      _clubId: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;
  };
}
