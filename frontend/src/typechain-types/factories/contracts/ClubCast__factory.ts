/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { ClubCast, ClubCastInterface } from "../../contracts/ClubCast";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_tippingTokenAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "clubId",
        type: "string",
      },
      {
        indexed: true,
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "erc721Address",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "governanceAddress",
        type: "address",
      },
    ],
    name: "NewClub",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "videoId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "string",
        name: "clubId",
        type: "string",
      },
      {
        indexed: false,
        internalType: "address",
        name: "publisher",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "md5Hash",
        type: "string",
      },
    ],
    name: "NewPublication",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "tipper",
        type: "address",
      },
      {
        indexed: true,
        internalType: "string",
        name: "clubId",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Tipped",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "string",
        name: "clubId",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdrawn",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "clubs",
    outputs: [
      {
        internalType: "string",
        name: "clubId",
        type: "string",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "governanceAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "erc721Address",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "maxMember",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_clubId",
        type: "string",
      },
      {
        internalType: "address",
        name: "_erc721Address",
        type: "address",
      },
      {
        internalType: "address",
        name: "_governanceAddress",
        type: "address",
      },
    ],
    name: "createClub",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_clubId",
        type: "string",
      },
    ],
    name: "getClubErc721",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_clubId",
        type: "string",
      },
    ],
    name: "getClubGovernance",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_clubId",
        type: "string",
      },
    ],
    name: "getClubInfo",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "clubId",
            type: "string",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "address",
            name: "governanceAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "erc721Address",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "maxMember",
            type: "uint256",
          },
        ],
        internalType: "struct Club",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_clubId",
        type: "string",
      },
    ],
    name: "getClubOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_clubId",
        type: "string",
      },
    ],
    name: "getPublicationCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_userAddress",
        type: "address",
      },
    ],
    name: "getUserClubIds",
    outputs: [
      {
        internalType: "string[]",
        name: "",
        type: "string[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_clubId",
        type: "string",
      },
    ],
    name: "joinClub",
    outputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_clubId",
        type: "string",
      },
      {
        internalType: "address",
        name: "_requester",
        type: "address",
      },
    ],
    name: "listPublications",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "videoId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "publisher",
            type: "address",
          },
          {
            internalType: "string",
            name: "md5Hash",
            type: "string",
          },
        ],
        internalType: "struct ClubCast.Publication[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "publications",
    outputs: [
      {
        internalType: "uint256",
        name: "videoId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "publisher",
        type: "address",
      },
      {
        internalType: "string",
        name: "md5Hash",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_clubId",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_videoId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_md5Hash",
        type: "string",
      },
    ],
    name: "publishVideo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_clubId",
        type: "string",
      },
    ],
    name: "tipContentCreator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "tippingToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "tips",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "userClubIds",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "userClubTokenMappings",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_clubId",
        type: "string",
      },
    ],
    name: "withdrawTips",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "";

type ClubCastConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ClubCastConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ClubCast__factory extends ContractFactory {
  constructor(...args: ClubCastConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _tippingTokenAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ClubCast> {
    return super.deploy(
      _tippingTokenAddress,
      overrides || {}
    ) as Promise<ClubCast>;
  }
  override getDeployTransaction(
    _tippingTokenAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_tippingTokenAddress, overrides || {});
  }
  override attach(address: string): ClubCast {
    return super.attach(address) as ClubCast;
  }
  override connect(signer: Signer): ClubCast__factory {
    return super.connect(signer) as ClubCast__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ClubCastInterface {
    return new utils.Interface(_abi) as ClubCastInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ClubCast {
    return new Contract(address, _abi, signerOrProvider) as ClubCast;
  }
}
