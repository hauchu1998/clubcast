/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { ERC20Mock, ERC20MockInterface } from "../../contracts/ERC20Mock";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "initialOwner",
        type: "address",
      },
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "CheckpointUnorderedInsertion",
    type: "error",
  },
  {
    inputs: [],
    name: "ECDSAInvalidSignature",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "length",
        type: "uint256",
      },
    ],
    name: "ECDSAInvalidSignatureLength",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "ECDSAInvalidSignatureS",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "increasedSupply",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "cap",
        type: "uint256",
      },
    ],
    name: "ERC20ExceededSafeSupply",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allowance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientAllowance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC20InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC20InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSpender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "ERC2612ExpiredSignature",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "signer",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC2612InvalidSigner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "timepoint",
        type: "uint256",
      },
      {
        internalType: "uint48",
        name: "clock",
        type: "uint48",
      },
    ],
    name: "ERC5805FutureLookup",
    type: "error",
  },
  {
    inputs: [],
    name: "ERC6372InconsistentClock",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "currentNonce",
        type: "uint256",
      },
    ],
    name: "InvalidAccountNonce",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidShortString",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "bits",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "SafeCastOverflowedUintDowncast",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "str",
        type: "string",
      },
    ],
    name: "StringTooLong",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "expiry",
        type: "uint256",
      },
    ],
    name: "VotesExpiredSignature",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "delegator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "fromDelegate",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "toDelegate",
        type: "address",
      },
    ],
    name: "DelegateChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "delegate",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "previousVotes",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newVotes",
        type: "uint256",
      },
    ],
    name: "DelegateVotesChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "EIP712DomainChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "CLOCK_MODE",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "burnFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "pos",
        type: "uint32",
      },
    ],
    name: "checkpoints",
    outputs: [
      {
        components: [
          {
            internalType: "uint48",
            name: "_key",
            type: "uint48",
          },
          {
            internalType: "uint208",
            name: "_value",
            type: "uint208",
          },
        ],
        internalType: "struct Checkpoints.Checkpoint208",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "clock",
    outputs: [
      {
        internalType: "uint48",
        name: "",
        type: "uint48",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "delegatee",
        type: "address",
      },
    ],
    name: "delegate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "delegatee",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expiry",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "delegateBySig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "delegates",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "eip712Domain",
    outputs: [
      {
        internalType: "bytes1",
        name: "fields",
        type: "bytes1",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "version",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "verifyingContract",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
      {
        internalType: "uint256[]",
        name: "extensions",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "timepoint",
        type: "uint256",
      },
    ],
    name: "getPastTotalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "timepoint",
        type: "uint256",
      },
    ],
    name: "getPastVotes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getVotes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "numCheckpoints",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6101606040523480156200001257600080fd5b5060405162002dfb38038062002dfb83398101604081905262000035916200099e565b6040805180820190915260018152603160f81b602082015282908190858285600362000062838262000ab6565b50600462000071828262000ab6565b5050506001600160a01b038116620000a457604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b620000af8162000196565b50620000bd826006620001e8565b61012052620000ce816007620001e8565b61014052815160208084019190912060e052815190820120610100524660a0526200015c60e05161010051604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201529081019290925260608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b60805250503060c052506200018d33620001796012600a62000c95565b6200018790614e2062000ca3565b62000221565b50505062000d90565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000602083511015620002085762000200836200025f565b90506200021b565b8162000215848262000ab6565b5060ff90505b92915050565b6001600160a01b0382166200024d5760405163ec442f0560e01b8152600060048201526024016200009b565b6200025b60008383620002a2565b5050565b600080829050601f815111156200028d578260405163305a27a960e01b81526004016200009b919062000cbd565b80516200029a8262000cf2565b179392505050565b620002af838383620002b4565b505050565b620002c183838362000323565b6001600160a01b03831662000316576000620002dc60025490565b90506001600160d01b03808211156200031357604051630e58ae9360e11b815260048101839052602481018290526044016200009b565b50505b620002af83838362000456565b6001600160a01b0383166200035257806002600082825462000346919062000d17565b90915550620003c69050565b6001600160a01b03831660009081526020819052604090205481811015620003a75760405163391434e360e21b81526001600160a01b038516600482015260248101829052604481018390526064016200009b565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b038216620003e45760028054829003905562000403565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516200044991815260200190565b60405180910390a3505050565b6001600160a01b0383166200048b5762000488600b620009d2620004ee60201b17620004828462000503565b6200053d565b50505b6001600160a01b038216620004ba57620004b7600b620009de6200057160201b17620004828462000503565b50505b6001600160a01b03838116600090815260096020526040808220548584168352912054620002af929182169116836200057f565b6000620004fc828462000d2d565b9392505050565b60006001600160d01b0382111562000539576040516306dfcc6560e41b815260d06004820152602481018390526044016200009b565b5090565b60008062000564426200055b6200055488620006e6565b868860201c565b87919062000735565b915091505b935093915050565b6000620004fc828462000d57565b816001600160a01b0316836001600160a01b031614158015620005a25750600081115b15620002af576001600160a01b0383161562000645576001600160a01b0383166000908152600a6020908152604082208291620005f0919062000571901b620009de17620004828662000503565b6001600160d01b031691506001600160d01b03169150846001600160a01b031660008051602062002ddb83398151915283836040516200063a929190918252602082015260400190565b60405180910390a250505b6001600160a01b03821615620002af576001600160a01b0382166000908152600a60209081526040822082916200068d9190620004ee901b620009d217620004828662000503565b6001600160d01b031691506001600160d01b03169150836001600160a01b031660008051602062002ddb8339815191528383604051620006d7929190918252602082015260400190565b60405180910390a25050505050565b805460009080156200072c5762000712836200070460018462000d7a565b600091825260209091200190565b54660100000000000090046001600160d01b0316620004fc565b60009392505050565b600080620005648585858254600090819080156200087257600062000761876200070460018562000d7a565b60408051808201909152905465ffffffffffff80821680845266010000000000009092046001600160d01b031660208401529192509087161015620007b957604051632520601d60e01b815260040160405180910390fd5b805165ffffffffffff8088169116036200080d5784620007e0886200070460018662000d7a565b80546001600160d01b039290921666010000000000000265ffffffffffff90921691909117905562000861565b6040805180820190915265ffffffffffff80881682526001600160d01b0380881660208085019182528b54600181018d5560008d815291909120945191519092166601000000000000029216919091179101555b602001519250839150620005699050565b50506040805180820190915265ffffffffffff80851682526001600160d01b0380851660208085019182528854600181018a5560008a815291822095519251909316660100000000000002919093161792019190915590508162000569565b634e487b7160e01b600052604160045260246000fd5b60005b8381101562000904578181015183820152602001620008ea565b50506000910152565b600082601f8301126200091f57600080fd5b81516001600160401b03808211156200093c576200093c620008d1565b604051601f8301601f19908116603f01168101908282118183101715620009675762000967620008d1565b816040528381528660208588010111156200098157600080fd5b62000994846020830160208901620008e7565b9695505050505050565b600080600060608486031215620009b457600080fd5b83516001600160a01b0381168114620009cc57600080fd5b60208501519093506001600160401b0380821115620009ea57600080fd5b620009f8878388016200090d565b9350604086015191508082111562000a0f57600080fd5b5062000a1e868287016200090d565b9150509250925092565b600181811c9082168062000a3d57607f821691505b60208210810362000a5e57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620002af57600081815260208120601f850160051c8101602086101562000a8d5750805b601f850160051c820191505b8181101562000aae5782815560010162000a99565b505050505050565b81516001600160401b0381111562000ad25762000ad2620008d1565b62000aea8162000ae3845462000a28565b8462000a64565b602080601f83116001811462000b22576000841562000b095750858301515b600019600386901b1c1916600185901b17855562000aae565b600085815260208120601f198616915b8281101562000b535788860151825594840194600190910190840162000b32565b508582101562000b725787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052601160045260246000fd5b600181815b8085111562000bd957816000190482111562000bbd5762000bbd62000b82565b8085161562000bcb57918102915b93841c939080029062000b9d565b509250929050565b60008262000bf2575060016200021b565b8162000c01575060006200021b565b816001811462000c1a576002811462000c255762000c45565b60019150506200021b565b60ff84111562000c395762000c3962000b82565b50506001821b6200021b565b5060208310610133831016604e8410600b841016171562000c6a575081810a6200021b565b62000c76838362000b98565b806000190482111562000c8d5762000c8d62000b82565b029392505050565b6000620004fc838362000be1565b80820281158282048414176200021b576200021b62000b82565b602081526000825180602084015262000cde816040850160208701620008e7565b601f01601f19169190910160400192915050565b8051602080830151919081101562000a5e5760001960209190910360031b1b16919050565b808201808211156200021b576200021b62000b82565b6001600160d01b0381811683821601908082111562000d505762000d5062000b82565b5092915050565b6001600160d01b0382811682821603908082111562000d505762000d5062000b82565b818103818111156200021b576200021b62000b82565b60805160a05160c05160e051610100516101205161014051611ff062000deb6000396000610ec201526000610e9501526000610bb301526000610b8b01526000610ae601526000610b1001526000610b3a0152611ff06000f3fe608060405234801561001057600080fd5b50600436106101cf5760003560e01c8063715018a61161010457806395d89b41116100a2578063d505accf11610071578063d505accf14610422578063dd62ed3e14610435578063f1127ed81461046e578063f2fde38b146104ad57600080fd5b806395d89b41146103e15780639ab24eb0146103e9578063a9059cbb146103fc578063c3cda5201461040f57600080fd5b806384b0196e116100de57806384b0196e1461038c5780638da5cb5b146103a75780638e539e8c146103b857806391ddadf4146103cb57600080fd5b8063715018a61461035e57806379cc6790146103665780637ecebe001461037957600080fd5b806340c10f1911610171578063587cde1e1161014b578063587cde1e146102b65780635c19a95c146102fa5780636fcfff451461030d57806370a082311461033557600080fd5b806340c10f191461026457806342966c68146102795780634bf5d7e91461028c57600080fd5b806323b872dd116101ad57806323b872dd14610227578063313ce5671461023a5780633644e515146102495780633a46b1a81461025157600080fd5b806306fdde03146101d4578063095ea7b3146101f257806318160ddd14610215575b600080fd5b6101dc6104c0565b6040516101e99190611bf4565b60405180910390f35b610205610200366004611c23565b610552565b60405190151581526020016101e9565b6002545b6040519081526020016101e9565b610205610235366004611c4d565b61056c565b604051601281526020016101e9565b610219610590565b61021961025f366004611c23565b61059f565b610277610272366004611c23565b61061b565b005b610277610287366004611c89565b610631565b60408051808201909152600e81526d06d6f64653d74696d657374616d760941b60208201526101dc565b6102e26102c4366004611ca2565b6001600160a01b039081166000908152600960205260409020541690565b6040516001600160a01b0390911681526020016101e9565b610277610308366004611ca2565b61063e565b61032061031b366004611ca2565b610649565b60405163ffffffff90911681526020016101e9565b610219610343366004611ca2565b6001600160a01b031660009081526020819052604090205490565b610277610654565b610277610374366004611c23565b610668565b610219610387366004611ca2565b61067d565b610394610688565b6040516101e99796959493929190611cbd565b6005546001600160a01b03166102e2565b6102196103c6366004611c89565b6106ce565b60405165ffffffffffff421681526020016101e9565b6101dc61072e565b6102196103f7366004611ca2565b61073d565b61020561040a366004611c23565b61076d565b61027761041d366004611d64565b61077b565b610277610430366004611dbc565b610838565b610219610443366004611e26565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b61048161047c366004611e59565b610972565b60408051825165ffffffffffff1681526020928301516001600160d01b031692810192909252016101e9565b6102776104bb366004611ca2565b610997565b6060600380546104cf90611e99565b80601f01602080910402602001604051908101604052809291908181526020018280546104fb90611e99565b80156105485780601f1061051d57610100808354040283529160200191610548565b820191906000526020600020905b81548152906001019060200180831161052b57829003601f168201915b5050505050905090565b6000336105608185856109ea565b60019150505b92915050565b60003361057a8582856109fc565b610585858585610a7a565b506001949350505050565b600061059a610ad9565b905090565b60004265ffffffffffff811683106105e057604051637669fc0f60e11b81526004810184905265ffffffffffff821660248201526044015b60405180910390fd5b61060a6105ec84610c04565b6001600160a01b0386166000908152600a6020526040902090610c3b565b6001600160d01b0316949350505050565b610623610cf1565b61062d8282610d1e565b5050565b61063b3382610d54565b50565b3361062d8183610d8a565b600061056682610dfc565b61065c610cf1565b6106666000610e1e565b565b6106738233836109fc565b61062d8282610d54565b600061056682610e70565b60006060806000806000606061069c610e8e565b6106a4610ebb565b60408051600080825260208201909252600f60f81b9b939a50919850469750309650945092509050565b60004265ffffffffffff8116831061070a57604051637669fc0f60e11b81526004810184905265ffffffffffff821660248201526044016105d7565b61071e61071684610c04565b600b90610c3b565b6001600160d01b03169392505050565b6060600480546104cf90611e99565b6001600160a01b0381166000908152600a6020526040812061075e90610ee8565b6001600160d01b031692915050565b600033610560818585610a7a565b8342111561079f57604051632341d78760e11b8152600481018590526024016105d7565b604080517fe48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf60208201526001600160a01b038816918101919091526060810186905260808101859052600090610819906108119060a00160405160208183030381529060405280519060200120610f21565b858585610f4e565b90506108258187610f7c565b61082f8188610d8a565b50505050505050565b8342111561085c5760405163313c898160e11b8152600481018590526024016105d7565b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98888886108a98c6001600160a01b0316600090815260086020526040902080546001810190915590565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e001604051602081830303815290604052805190602001209050600061090482610f21565b9050600061091482878787610f4e565b9050896001600160a01b0316816001600160a01b03161461095b576040516325c0072360e11b81526001600160a01b0380831660048301528b1660248201526044016105d7565b6109668a8a8a6109ea565b50505050505050505050565b60408051808201909152600080825260208201526109908383610fcf565b9392505050565b61099f610cf1565b6001600160a01b0381166109c957604051631e4fbdf760e01b8152600060048201526024016105d7565b61063b81610e1e565b60006109908284611ee9565b60006109908284611f10565b6109f78383836001611005565b505050565b6001600160a01b038381166000908152600160209081526040808320938616835292905220546000198114610a745781811015610a6557604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064016105d7565b610a7484848484036000611005565b50505050565b6001600160a01b038316610aa457604051634b637e8f60e11b8152600060048201526024016105d7565b6001600160a01b038216610ace5760405163ec442f0560e01b8152600060048201526024016105d7565b6109f78383836110da565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016148015610b3257507f000000000000000000000000000000000000000000000000000000000000000046145b15610b5c57507f000000000000000000000000000000000000000000000000000000000000000090565b61059a604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201527f0000000000000000000000000000000000000000000000000000000000000000918101919091527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b600065ffffffffffff821115610c37576040516306dfcc6560e41b815260306004820152602481018390526044016105d7565b5090565b815460009081816005811115610c9a576000610c56846110e5565b610c609085611f30565b60008881526020902090915081015465ffffffffffff9081169087161015610c8a57809150610c98565b610c95816001611f43565b92505b505b6000610ca8878785856111cd565b90508015610ce357610ccd87610cbf600184611f30565b600091825260209091200190565b54600160301b90046001600160d01b0316610ce6565b60005b979650505050505050565b6005546001600160a01b031633146106665760405163118cdaa760e01b81523360048201526024016105d7565b6001600160a01b038216610d485760405163ec442f0560e01b8152600060048201526024016105d7565b61062d600083836110da565b6001600160a01b038216610d7e57604051634b637e8f60e11b8152600060048201526024016105d7565b61062d826000836110da565b6001600160a01b0382811660008181526009602052604080822080548686166001600160a01b0319821681179092559151919094169392849290917f3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f9190a46109f78183610df78661122f565b61124d565b6001600160a01b0381166000908152600a6020526040812054610566906113b9565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b038116600090815260086020526040812054610566565b606061059a7f000000000000000000000000000000000000000000000000000000000000000060066113ea565b606061059a7f000000000000000000000000000000000000000000000000000000000000000060076113ea565b80546000908015610f1857610f0283610cbf600184611f30565b54600160301b90046001600160d01b0316610990565b60009392505050565b6000610566610f2e610ad9565b8360405161190160f01b8152600281019290925260228201526042902090565b600080600080610f6088888888611495565b925092509250610f708282611564565b50909695505050505050565b6001600160a01b03821660009081526008602052604090208054600181019091558181146109f7576040516301d4b62360e61b81526001600160a01b0384166004820152602481018290526044016105d7565b60408051808201909152600080825260208201526001600160a01b0383166000908152600a60205260409020610990908361161d565b6001600160a01b03841661102f5760405163e602df0560e01b8152600060048201526024016105d7565b6001600160a01b03831661105957604051634a1406b160e11b8152600060048201526024016105d7565b6001600160a01b0380851660009081526001602090815260408083209387168352929052208290558015610a7457826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516110cc91815260200190565b60405180910390a350505050565b6109f783838361168d565b6000816000036110f757506000919050565b60006001611104846116f4565b901c6001901b9050600181848161111d5761111d611f56565b048201901c9050600181848161113557611135611f56565b048201901c9050600181848161114d5761114d611f56565b048201901c9050600181848161116557611165611f56565b048201901c9050600181848161117d5761117d611f56565b048201901c9050600181848161119557611195611f56565b048201901c905060018184816111ad576111ad611f56565b048201901c9050610990818285816111c7576111c7611f56565b04611788565b60005b818310156112275760006111e4848461179e565b60008781526020902090915065ffffffffffff86169082015465ffffffffffff16111561121357809250611221565b61121e816001611f43565b93505b506111d0565b509392505050565b6001600160a01b038116600090815260208190526040812054610566565b816001600160a01b0316836001600160a01b03161415801561126f5750600081115b156109f7576001600160a01b03831615611317576001600160a01b0383166000908152600a6020526040812081906112b2906109de6112ad866117b9565b6117ed565b6001600160d01b031691506001600160d01b03169150846001600160a01b03167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a724838360405161130c929190918252602082015260400190565b60405180910390a250505b6001600160a01b038216156109f7576001600160a01b0382166000908152600a602052604081208190611350906109d26112ad866117b9565b6001600160d01b031691506001600160d01b03169150836001600160a01b03167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a72483836040516113aa929190918252602082015260400190565b60405180910390a25050505050565b600063ffffffff821115610c37576040516306dfcc6560e41b815260206004820152602481018390526044016105d7565b606060ff8314611404576113fd8361181f565b9050610566565b81805461141090611e99565b80601f016020809104026020016040519081016040528092919081815260200182805461143c90611e99565b80156114895780601f1061145e57610100808354040283529160200191611489565b820191906000526020600020905b81548152906001019060200180831161146c57829003601f168201915b50505050509050610566565b600080807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08411156114d0575060009150600390508261155a565b604080516000808252602082018084528a905260ff891692820192909252606081018790526080810186905260019060a0016020604051602081039080840390855afa158015611524573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166115505750600092506001915082905061155a565b9250600091508190505b9450945094915050565b600082600381111561157857611578611f6c565b03611581575050565b600182600381111561159557611595611f6c565b036115b35760405163f645eedf60e01b815260040160405180910390fd5b60028260038111156115c7576115c7611f6c565b036115e85760405163fce698f760e01b8152600481018290526024016105d7565b60038260038111156115fc576115fc611f6c565b0361062d576040516335e2f38360e21b8152600481018290526024016105d7565b6040805180820190915260008082526020820152826000018263ffffffff168154811061164c5761164c611f82565b60009182526020918290206040805180820190915291015465ffffffffffff81168252600160301b90046001600160d01b0316918101919091529392505050565b61169883838361185e565b6001600160a01b0383166116e95760006116b160025490565b90506001600160d01b03808211156116e657604051630e58ae9360e11b815260048101839052602481018290526044016105d7565b50505b6109f7838383611988565b600080608083901c1561170957608092831c92015b604083901c1561171b57604092831c92015b602083901c1561172d57602092831c92015b601083901c1561173f57601092831c92015b600883901c1561175157600892831c92015b600483901c1561176357600492831c92015b600283901c1561177557600292831c92015b600183901c156105665760010192915050565b60008183106117975781610990565b5090919050565b60006117ad6002848418611f98565b61099090848416611f43565b60006001600160d01b03821115610c37576040516306dfcc6560e41b815260d06004820152602481018390526044016105d7565b6000806118124261180a61180088610ee8565b868863ffffffff16565b8791906119fe565b915091505b935093915050565b6060600061182c83611a0c565b604080516020808252818301909252919250600091906020820181803683375050509182525060208101929092525090565b6001600160a01b03831661188957806002600082825461187e9190611f43565b909155506118fb9050565b6001600160a01b038316600090815260208190526040902054818110156118dc5760405163391434e360e21b81526001600160a01b038516600482015260248101829052604481018390526064016105d7565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b03821661191757600280548290039055611936565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161197b91815260200190565b60405180910390a3505050565b6001600160a01b0383166119aa576119a7600b6109d26112ad846117b9565b50505b6001600160a01b0382166119cc576119c9600b6109de6112ad846117b9565b50505b6001600160a01b038381166000908152600960205260408082205485841683529120546109f79291821691168361124d565b600080611812858585611a34565b600060ff8216601f81111561056657604051632cd44ac360e21b815260040160405180910390fd5b825460009081908015611b53576000611a5287610cbf600185611f30565b60408051808201909152905465ffffffffffff808216808452600160301b9092046001600160d01b031660208401529192509087161015611aa657604051632520601d60e01b815260040160405180910390fd5b805165ffffffffffff808816911603611af25784611ac988610cbf600186611f30565b80546001600160d01b0392909216600160301b0265ffffffffffff909216919091179055611b43565b6040805180820190915265ffffffffffff80881682526001600160d01b0380881660208085019182528b54600181018d5560008d81529190912094519151909216600160301b029216919091179101555b6020015192508391506118179050565b50506040805180820190915265ffffffffffff80851682526001600160d01b0380851660208085019182528854600181018a5560008a815291822095519251909316600160301b029190931617920191909155905081611817565b6000815180845260005b81811015611bd457602081850181015186830182015201611bb8565b506000602082860101526020601f19601f83011685010191505092915050565b6020815260006109906020830184611bae565b80356001600160a01b0381168114611c1e57600080fd5b919050565b60008060408385031215611c3657600080fd5b611c3f83611c07565b946020939093013593505050565b600080600060608486031215611c6257600080fd5b611c6b84611c07565b9250611c7960208501611c07565b9150604084013590509250925092565b600060208284031215611c9b57600080fd5b5035919050565b600060208284031215611cb457600080fd5b61099082611c07565b60ff60f81b881681526000602060e081840152611cdd60e084018a611bae565b8381036040850152611cef818a611bae565b606085018990526001600160a01b038816608086015260a0850187905284810360c0860152855180825283870192509083019060005b81811015611d4157835183529284019291840191600101611d25565b50909c9b505050505050505050505050565b803560ff81168114611c1e57600080fd5b60008060008060008060c08789031215611d7d57600080fd5b611d8687611c07565b95506020870135945060408701359350611da260608801611d53565b92506080870135915060a087013590509295509295509295565b600080600080600080600060e0888a031215611dd757600080fd5b611de088611c07565b9650611dee60208901611c07565b95506040880135945060608801359350611e0a60808901611d53565b925060a0880135915060c0880135905092959891949750929550565b60008060408385031215611e3957600080fd5b611e4283611c07565b9150611e5060208401611c07565b90509250929050565b60008060408385031215611e6c57600080fd5b611e7583611c07565b9150602083013563ffffffff81168114611e8e57600080fd5b809150509250929050565b600181811c90821680611ead57607f821691505b602082108103611ecd57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b6001600160d01b03818116838216019080821115611f0957611f09611ed3565b5092915050565b6001600160d01b03828116828216039080821115611f0957611f09611ed3565b8181038181111561056657610566611ed3565b8082018082111561056657610566611ed3565b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b600082611fb557634e487b7160e01b600052601260045260246000fd5b50049056fea26469706673582212209a305190e0c1044b7b587c2afc6fdbd28c0a8d498a34beeee93af8d3c18d30bc64736f6c63430008140033dec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a724";

type ERC20MockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC20MockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC20Mock__factory extends ContractFactory {
  constructor(...args: ERC20MockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    initialOwner: PromiseOrValue<string>,
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC20Mock> {
    return super.deploy(
      initialOwner,
      _name,
      _symbol,
      overrides || {}
    ) as Promise<ERC20Mock>;
  }
  override getDeployTransaction(
    initialOwner: PromiseOrValue<string>,
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      initialOwner,
      _name,
      _symbol,
      overrides || {}
    );
  }
  override attach(address: string): ERC20Mock {
    return super.attach(address) as ERC20Mock;
  }
  override connect(signer: Signer): ERC20Mock__factory {
    return super.connect(signer) as ERC20Mock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC20MockInterface {
    return new utils.Interface(_abi) as ERC20MockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC20Mock {
    return new Contract(address, _abi, signerOrProvider) as ERC20Mock;
  }
}
