/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  ERC721Mock,
  ERC721MockInterface,
} from "../../contracts/ERC721Mock";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "initialOwner",
        type: "address",
      },
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "supply",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "CheckpointUnorderedInsertion",
    type: "error",
  },
  {
    inputs: [],
    name: "ECDSAInvalidSignature",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "length",
        type: "uint256",
      },
    ],
    name: "ECDSAInvalidSignatureLength",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "ECDSAInvalidSignatureS",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "timepoint",
        type: "uint256",
      },
      {
        internalType: "uint48",
        name: "clock",
        type: "uint48",
      },
    ],
    name: "ERC5805FutureLookup",
    type: "error",
  },
  {
    inputs: [],
    name: "ERC6372InconsistentClock",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721IncorrectOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721InsufficientApproval",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC721InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "ERC721InvalidOperator",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721InvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC721InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC721InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721NonexistentToken",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "currentNonce",
        type: "uint256",
      },
    ],
    name: "InvalidAccountNonce",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidShortString",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "bits",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "SafeCastOverflowedUintDowncast",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "str",
        type: "string",
      },
    ],
    name: "StringTooLong",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "expiry",
        type: "uint256",
      },
    ],
    name: "VotesExpiredSignature",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "delegator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "fromDelegate",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "toDelegate",
        type: "address",
      },
    ],
    name: "DelegateChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "delegate",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "previousVotes",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newVotes",
        type: "uint256",
      },
    ],
    name: "DelegateVotesChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "EIP712DomainChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "CLOCK_MODE",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "clock",
    outputs: [
      {
        internalType: "uint48",
        name: "",
        type: "uint48",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "delegatee",
        type: "address",
      },
    ],
    name: "delegate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "delegatee",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expiry",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "delegateBySig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "delegates",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "eip712Domain",
    outputs: [
      {
        internalType: "bytes1",
        name: "fields",
        type: "bytes1",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "version",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "verifyingContract",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
      {
        internalType: "uint256[]",
        name: "extensions",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMaxSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "timepoint",
        type: "uint256",
      },
    ],
    name: "getPastTotalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "timepoint",
        type: "uint256",
      },
    ],
    name: "getPastVotes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getVotes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
    ],
    name: "publicMint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "safeMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6101606040523480156200001257600080fd5b50604051620029d9380380620029d983398101604081905262000035916200030b565b6040805180820190915260018152603160f81b6020820152839085828560006200006083826200042c565b5060016200006f82826200042c565b5050506001600160a01b038116620000a257604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b620000ad8162000170565b50620000bb826007620001c2565b61012052620000cc816008620001c2565b61014052815160208084019190912060e052815190820120610100524660a0526200015a60e05161010051604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201529081019290925260608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b60805250503060c052600e555062000552915050565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000602083511015620001e257620001da83620001fb565b9050620001f5565b81620001ef84826200042c565b5060ff90505b92915050565b600080829050601f8151111562000229578260405163305a27a960e01b8152600401620000999190620004f8565b805162000236826200052d565b179392505050565b634e487b7160e01b600052604160045260246000fd5b60005b838110156200027157818101518382015260200162000257565b50506000910152565b600082601f8301126200028c57600080fd5b81516001600160401b0380821115620002a957620002a96200023e565b604051601f8301601f19908116603f01168101908282118183101715620002d457620002d46200023e565b81604052838152866020858801011115620002ee57600080fd5b6200030184602083016020890162000254565b9695505050505050565b600080600080608085870312156200032257600080fd5b84516001600160a01b03811681146200033a57600080fd5b60208601519094506001600160401b03808211156200035857600080fd5b62000366888389016200027a565b945060408701519150808211156200037d57600080fd5b506200038c878288016200027a565b606096909601519497939650505050565b600181811c90821680620003b257607f821691505b602082108103620003d357634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200042757600081815260208120601f850160051c81016020861015620004025750805b601f850160051c820191505b8181101562000423578281556001016200040e565b5050505b505050565b81516001600160401b038111156200044857620004486200023e565b62000460816200045984546200039d565b84620003d9565b602080601f8311600181146200049857600084156200047f5750858301515b600019600386901b1c1916600185901b17855562000423565b600085815260208120601f198616915b82811015620004c957888601518255948401946001909101908401620004a8565b5085821015620004e85787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60208152600082518060208401526200051981604085016020870162000254565b601f01601f19169190910160400192915050565b80516020808301519190811015620003d35760001960209190910360031b1b16919050565b60805160a05160c05160e05161010051610120516101405161242c620005ad6000396000610da601526000610d740152600061168d01526000611665015260006115c0015260006115ea01526000611614015261242c6000f3fe608060405234801561001057600080fd5b50600436106101e55760003560e01c80636352211e1161010f57806395d89b41116100a2578063c3cda52011610071578063c3cda52014610458578063c87b56dd1461046b578063e985e9c51461047e578063f2fde38b1461049157600080fd5b806395d89b41146104175780639ab24eb01461041f578063a22cb46514610432578063b88d4fde1461044557600080fd5b806384b0196e116100de57806384b0196e146103c25780638da5cb5b146103dd5780638e539e8c146103ee57806391ddadf41461040157600080fd5b80636352211e1461036b57806370a082311461037e578063715018a6146103915780637ecebe001461039957600080fd5b80633a46b1a8116101875780634bf5d7e9116101565780634bf5d7e9146102fa5780634c0f38c214610324578063587cde1e1461032c5780635c19a95c1461035857600080fd5b80633a46b1a8146102ae57806340c10f19146102c157806340d097c3146102d457806342842e0e146102e757600080fd5b8063095ea7b3116101c3578063095ea7b31461025257806313af40351461026757806323b872dd1461027a57806332a93a3a1461028d57600080fd5b806301ffc9a7146101ea57806306fdde0314610212578063081812fc14610227575b600080fd5b6101fd6101f8366004611ebc565b6104a4565b60405190151581526020015b60405180910390f35b61021a6104f6565b6040516102099190611f29565b61023a610235366004611f3c565b610588565b6040516001600160a01b039091168152602001610209565b610265610260366004611f71565b6105b1565b005b610265610275366004611f9b565b6105c0565b610265610288366004611fb6565b6105d4565b6102a061029b366004611f9b565b610664565b604051908152602001610209565b6102a06102bc366004611f71565b6106d7565b6102656102cf366004611f71565b61074e565b6102656102e2366004611f9b565b610758565b6102656102f5366004611fb6565b610781565b60408051808201909152600e81526d06d6f64653d74696d657374616d760941b602082015261021a565b600e546102a0565b61023a61033a366004611f9b565b6001600160a01b039081166000908152600a60205260409020541690565b610265610366366004611f9b565b6107a1565b61023a610379366004611f3c565b6107ac565b6102a061038c366004611f9b565b6107b7565b6102656107ff565b6102a06103a7366004611f9b565b6001600160a01b031660009081526009602052604090205490565b6103ca610813565b6040516102099796959493929190611ff2565b6006546001600160a01b031661023a565b6102a06103fc366004611f3c565b610859565b60405165ffffffffffff42168152602001610209565b61021a6108b9565b6102a061042d366004611f9b565b6108c8565b610265610440366004612088565b6108f8565b6102656104533660046120da565b610903565b6102656104663660046121b6565b61091a565b61021a610479366004611f3c565b6109d7565b6101fd61048c366004612216565b610a4c565b61026561049f366004611f9b565b610a7a565b60006001600160e01b031982166380ac58cd60e01b14806104d557506001600160e01b03198216635b5e139f60e01b145b806104f057506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606000805461050590612249565b80601f016020809104026020016040519081016040528092919081815260200182805461053190612249565b801561057e5780601f106105535761010080835404028352916020019161057e565b820191906000526020600020905b81548152906001019060200180831161056157829003601f168201915b5050505050905090565b600061059382610ab5565b506000828152600460205260409020546001600160a01b03166104f0565b6105bc828233610aee565b5050565b6105c8610afb565b6105d181610a7a565b50565b6001600160a01b03821661060357604051633250574960e11b8152600060048201526024015b60405180910390fd5b6000610610838333610b28565b9050836001600160a01b0316816001600160a01b03161461065e576040516364283d7b60e01b81526001600160a01b03808616600483015260248201849052821660448201526064016105fa565b50505050565b600d54600e546000919081106106b15760405162461bcd60e51b815260206004820152601260248201527113585e081cdd5c1c1b1e481c995858da195960721b60448201526064016105fa565b6106bb8382610b3d565b600d80549060006106cb83612299565b90915550909392505050565b60004265ffffffffffff8116831061071357604051637669fc0f60e11b81526004810184905265ffffffffffff821660248201526044016105fa565b61073d61071f84610ba2565b6001600160a01b0386166000908152600b6020526040902090610bd9565b6001600160d01b0316949350505050565b6105bc8282610b3d565b610760610afb565b600d80546000918261077183612299565b9190505590506105bc8282610c8f565b61079c83838360405180602001604052806000815250610903565b505050565b336105bc8183610ca9565b60006104f082610ab5565b60006001600160a01b0382166107e3576040516322718ad960e21b8152600060048201526024016105fa565b506001600160a01b031660009081526003602052604090205490565b610807610afb565b6108116000610d1b565b565b600060608060008060006060610827610d6d565b61082f610d9f565b60408051600080825260208201909252600f60f81b9b939a50919850469750309650945092509050565b60004265ffffffffffff8116831061089557604051637669fc0f60e11b81526004810184905265ffffffffffff821660248201526044016105fa565b6108a96108a184610ba2565b600c90610bd9565b6001600160d01b03169392505050565b60606001805461050590612249565b6001600160a01b0381166000908152600b602052604081206108e990610dcc565b6001600160d01b031692915050565b6105bc338383610e05565b61090e8484846105d4565b61065e84848484610ea4565b8342111561093e57604051632341d78760e11b8152600481018590526024016105fa565b604080517fe48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf60208201526001600160a01b0388169181019190915260608101869052608081018590526000906109b8906109b09060a00160405160208183030381529060405280519060200120610fcd565b858585610ffa565b90506109c48187611028565b6109ce8188610ca9565b50505050505050565b60606109e282610ab5565b5060006109fa60408051602081019091526000815290565b90506000815111610a1a5760405180602001604052806000815250610a45565b80610a248461107b565b604051602001610a359291906122b2565b6040516020818303038152906040525b9392505050565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b610a82610afb565b6001600160a01b038116610aac57604051631e4fbdf760e01b8152600060048201526024016105fa565b6105d181610d1b565b6000818152600260205260408120546001600160a01b0316806104f057604051637e27328960e01b8152600481018490526024016105fa565b61079c838383600161110e565b6006546001600160a01b031633146108115760405163118cdaa760e01b81523360048201526024016105fa565b6000610b35848484611214565b949350505050565b6001600160a01b038216610b6757604051633250574960e11b8152600060048201526024016105fa565b6000610b7583836000610b28565b90506001600160a01b0381161561079c576040516339e3563760e11b8152600060048201526024016105fa565b600065ffffffffffff821115610bd5576040516306dfcc6560e41b815260306004820152602481018390526044016105fa565b5090565b815460009081816005811115610c38576000610bf484611230565b610bfe90856122e1565b60008881526020902090915081015465ffffffffffff9081169087161015610c2857809150610c36565b610c338160016122f4565b92505b505b6000610c4687878585611318565b90508015610c8157610c6b87610c5d6001846122e1565b600091825260209091200190565b54600160301b90046001600160d01b0316610c84565b60005b979650505050505050565b6105bc82826040518060200160405280600081525061137a565b6001600160a01b038281166000818152600a602052604080822080548686166001600160a01b0319821681179092559151919094169392849290917f3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f9190a461079c8183610d1686611391565b61139c565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6060610d9a7f00000000000000000000000000000000000000000000000000000000000000006007611508565b905090565b6060610d9a7f00000000000000000000000000000000000000000000000000000000000000006008611508565b80546000908015610dfc57610de683610c5d6001846122e1565b54600160301b90046001600160d01b0316610a45565b60009392505050565b6001600160a01b038216610e3757604051630b61174360e31b81526001600160a01b03831660048201526024016105fa565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0383163b1561065e57604051630a85bd0160e11b81526001600160a01b0384169063150b7a0290610ee6903390889087908790600401612307565b6020604051808303816000875af1925050508015610f21575060408051601f3d908101601f19168201909252610f1e91810190612344565b60015b610f8a573d808015610f4f576040519150601f19603f3d011682016040523d82523d6000602084013e610f54565b606091505b508051600003610f8257604051633250574960e11b81526001600160a01b03851660048201526024016105fa565b805181602001fd5b6001600160e01b03198116630a85bd0160e11b14610fc657604051633250574960e11b81526001600160a01b03851660048201526024016105fa565b5050505050565b60006104f0610fda6115b3565b8360405161190160f01b8152600281019290925260228201526042902090565b60008060008061100c888888886116de565b92509250925061101c82826117ad565b50909695505050505050565b6001600160a01b038216600090815260096020526040902080546001810190915581811461079c576040516301d4b62360e61b81526001600160a01b0384166004820152602481018290526044016105fa565b6060600061108883611866565b600101905060008167ffffffffffffffff8111156110a8576110a86120c4565b6040519080825280601f01601f1916602001820160405280156110d2576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a85049450846110dc57509392505050565b808061112257506001600160a01b03821615155b156111e457600061113284610ab5565b90506001600160a01b0383161580159061115e5750826001600160a01b0316816001600160a01b031614155b8015611171575061116f8184610a4c565b155b1561119a5760405163a9fbf51f60e01b81526001600160a01b03841660048201526024016105fa565b81156111e25783856001600160a01b0316826001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b5050600090815260046020526040902080546001600160a01b0319166001600160a01b0392909216919091179055565b60008061122285858561193e565b9050610b3581866001611a37565b60008160000361124257506000919050565b6000600161124f84611aad565b901c6001901b9050600181848161126857611268612361565b048201901c9050600181848161128057611280612361565b048201901c9050600181848161129857611298612361565b048201901c905060018184816112b0576112b0612361565b048201901c905060018184816112c8576112c8612361565b048201901c905060018184816112e0576112e0612361565b048201901c905060018184816112f8576112f8612361565b048201901c9050610a458182858161131257611312612361565b04611b41565b60005b8183101561137257600061132f8484611b57565b60008781526020902090915065ffffffffffff86169082015465ffffffffffff16111561135e5780925061136c565b6113698160016122f4565b93505b5061131b565b509392505050565b6113848383610b3d565b61079c6000848484610ea4565b60006104f0826107b7565b816001600160a01b0316836001600160a01b0316141580156113be5750600081115b1561079c576001600160a01b03831615611466576001600160a01b0383166000908152600b60205260408120819061140190611b726113fc86611b7e565b611bb2565b6001600160d01b031691506001600160d01b03169150846001600160a01b03167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a724838360405161145b929190918252602082015260400190565b60405180910390a250505b6001600160a01b0382161561079c576001600160a01b0382166000908152600b60205260408120819061149f90611be46113fc86611b7e565b6001600160d01b031691506001600160d01b03169150836001600160a01b03167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a72483836040516114f9929190918252602082015260400190565b60405180910390a25050505050565b606060ff83146115225761151b83611bf0565b90506104f0565b81805461152e90612249565b80601f016020809104026020016040519081016040528092919081815260200182805461155a90612249565b80156115a75780601f1061157c576101008083540402835291602001916115a7565b820191906000526020600020905b81548152906001019060200180831161158a57829003601f168201915b505050505090506104f0565b6000306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614801561160c57507f000000000000000000000000000000000000000000000000000000000000000046145b1561163657507f000000000000000000000000000000000000000000000000000000000000000090565b610d9a604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201527f0000000000000000000000000000000000000000000000000000000000000000918101919091527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b600080807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a084111561171957506000915060039050826117a3565b604080516000808252602082018084528a905260ff891692820192909252606081018790526080810186905260019060a0016020604051602081039080840390855afa15801561176d573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116611799575060009250600191508290506117a3565b9250600091508190505b9450945094915050565b60008260038111156117c1576117c1612377565b036117ca575050565b60018260038111156117de576117de612377565b036117fc5760405163f645eedf60e01b815260040160405180910390fd5b600282600381111561181057611810612377565b036118315760405163fce698f760e01b8152600481018290526024016105fa565b600382600381111561184557611845612377565b036105bc576040516335e2f38360e21b8152600481018290526024016105fa565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b83106118a55772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef810000000083106118d1576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc1000083106118ef57662386f26fc10000830492506010015b6305f5e1008310611907576305f5e100830492506008015b612710831061191b57612710830492506004015b6064831061192d576064830492506002015b600a83106104f05760010192915050565b6000828152600260205260408120546001600160a01b039081169083161561196b5761196b818486611c2f565b6001600160a01b038116156119a95761198860008560008061110e565b6001600160a01b038116600090815260036020526040902080546000190190555b6001600160a01b038516156119d8576001600160a01b0385166000908152600360205260409020805460010190555b60008481526002602052604080822080546001600160a01b0319166001600160a01b0389811691821790925591518793918516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4949350505050565b6001600160a01b038316611a5957611a56600c611be46113fc84611b7e565b50505b6001600160a01b038216611a7b57611a78600c611b726113fc84611b7e565b50505b6001600160a01b038381166000908152600a602052604080822054858416835291205461079c9291821691168361139c565b600080608083901c15611ac257608092831c92015b604083901c15611ad457604092831c92015b602083901c15611ae657602092831c92015b601083901c15611af857601092831c92015b600883901c15611b0a57600892831c92015b600483901c15611b1c57600492831c92015b600283901c15611b2e57600292831c92015b600183901c156104f05760010192915050565b6000818310611b505781610a45565b5090919050565b6000611b66600284841861238d565b610a45908484166122f4565b6000610a4582846123af565b60006001600160d01b03821115610bd5576040516306dfcc6560e41b815260d06004820152602481018390526044016105fa565b600080611bd742611bcf611bc588610dcc565b868863ffffffff16565b879190611c93565b915091505b935093915050565b6000610a4582846123d6565b60606000611bfd83611ca1565b604080516020808252818301909252919250600091906020820181803683375050509182525060208101929092525090565b611c3a838383611cc9565b61079c576001600160a01b038316611c6857604051637e27328960e01b8152600481018290526024016105fa565b60405163177e802f60e01b81526001600160a01b0383166004820152602481018290526044016105fa565b600080611bd7858585611d2c565b600060ff8216601f8111156104f057604051632cd44ac360e21b815260040160405180910390fd5b60006001600160a01b03831615801590610b355750826001600160a01b0316846001600160a01b03161480611d035750611d038484610a4c565b80610b355750506000908152600460205260409020546001600160a01b03908116911614919050565b825460009081908015611e4b576000611d4a87610c5d6001856122e1565b60408051808201909152905465ffffffffffff808216808452600160301b9092046001600160d01b031660208401529192509087161015611d9e57604051632520601d60e01b815260040160405180910390fd5b805165ffffffffffff808816911603611dea5784611dc188610c5d6001866122e1565b80546001600160d01b0392909216600160301b0265ffffffffffff909216919091179055611e3b565b6040805180820190915265ffffffffffff80881682526001600160d01b0380881660208085019182528b54600181018d5560008d81529190912094519151909216600160301b029216919091179101555b602001519250839150611bdc9050565b50506040805180820190915265ffffffffffff80851682526001600160d01b0380851660208085019182528854600181018a5560008a815291822095519251909316600160301b029190931617920191909155905081611bdc565b6001600160e01b0319811681146105d157600080fd5b600060208284031215611ece57600080fd5b8135610a4581611ea6565b60005b83811015611ef4578181015183820152602001611edc565b50506000910152565b60008151808452611f15816020860160208601611ed9565b601f01601f19169290920160200192915050565b602081526000610a456020830184611efd565b600060208284031215611f4e57600080fd5b5035919050565b80356001600160a01b0381168114611f6c57600080fd5b919050565b60008060408385031215611f8457600080fd5b611f8d83611f55565b946020939093013593505050565b600060208284031215611fad57600080fd5b610a4582611f55565b600080600060608486031215611fcb57600080fd5b611fd484611f55565b9250611fe260208501611f55565b9150604084013590509250925092565b60ff60f81b881681526000602060e08184015261201260e084018a611efd565b8381036040850152612024818a611efd565b606085018990526001600160a01b038816608086015260a0850187905284810360c0860152855180825283870192509083019060005b818110156120765783518352928401929184019160010161205a565b50909c9b505050505050505050505050565b6000806040838503121561209b57600080fd5b6120a483611f55565b9150602083013580151581146120b957600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b600080600080608085870312156120f057600080fd5b6120f985611f55565b935061210760208601611f55565b925060408501359150606085013567ffffffffffffffff8082111561212b57600080fd5b818701915087601f83011261213f57600080fd5b813581811115612151576121516120c4565b604051601f8201601f19908116603f01168101908382118183101715612179576121796120c4565b816040528281528a602084870101111561219257600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b60008060008060008060c087890312156121cf57600080fd5b6121d887611f55565b95506020870135945060408701359350606087013560ff811681146121fc57600080fd5b9598949750929560808101359460a0909101359350915050565b6000806040838503121561222957600080fd5b61223283611f55565b915061224060208401611f55565b90509250929050565b600181811c9082168061225d57607f821691505b60208210810361227d57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b6000600182016122ab576122ab612283565b5060010190565b600083516122c4818460208801611ed9565b8351908301906122d8818360208801611ed9565b01949350505050565b818103818111156104f0576104f0612283565b808201808211156104f0576104f0612283565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061233a90830184611efd565b9695505050505050565b60006020828403121561235657600080fd5b8151610a4581611ea6565b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052602160045260246000fd5b6000826123aa57634e487b7160e01b600052601260045260246000fd5b500490565b6001600160d01b038281168282160390808211156123cf576123cf612283565b5092915050565b6001600160d01b038181168382160190808211156123cf576123cf61228356fea264697066735822122084e434c70315798172a624a7b874491a0251f9a0a11efa2a6e6eaa71af2dadf164736f6c63430008140033";

type ERC721MockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC721MockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC721Mock__factory extends ContractFactory {
  constructor(...args: ERC721MockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    initialOwner: PromiseOrValue<string>,
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    supply: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC721Mock> {
    return super.deploy(
      initialOwner,
      _name,
      _symbol,
      supply,
      overrides || {}
    ) as Promise<ERC721Mock>;
  }
  override getDeployTransaction(
    initialOwner: PromiseOrValue<string>,
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    supply: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      initialOwner,
      _name,
      _symbol,
      supply,
      overrides || {}
    );
  }
  override attach(address: string): ERC721Mock {
    return super.attach(address) as ERC721Mock;
  }
  override connect(signer: Signer): ERC721Mock__factory {
    return super.connect(signer) as ERC721Mock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721MockInterface {
    return new utils.Interface(_abi) as ERC721MockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC721Mock {
    return new Contract(address, _abi, signerOrProvider) as ERC721Mock;
  }
}
